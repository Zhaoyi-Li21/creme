
################################
#                              #
#  Retrieving hyperparameters  #
#                              #
################################
ROMEHyperParams(layers=[17, 18, 19, 20, 21, 22, 23], fact_token='last', v_num_grad_steps=20, v_lr=0.1, v_loss_layer=31, v_weight_decay=0.001, clamp_norm_factor=4, kl_factor=0.0625, mom2_adjustment=False, rewrite_module_tmp='transformer.h.{}.mlp.fc_out', layer_module_tmp='model.layers.{}', mlp_module_tmp='model.layers.{}.mlp', attn_module_tmp='model.layers.{}.self_attn', ln_f_module='model.norm', lm_head_module='lm_head', mom2_dataset='wikipedia', mom2_n_samples=100000, mom2_dtype='float16', edit_mode='middle-attention', rewrite_module_tmp_mlp='model.layers.{}.mlp.down_proj', rewrite_module_tmp_attn='model.layers.{}.self_attn.o_proj', transpose=True, check_updated_vector=True)
check_tok_enc: [1, 7660, 29892, 360, 29889, 29907, 29889]
check_tok_enc: [1, 3303, 3900, 310, 6813]
check_tok_enc: [1, 4602, 10722, 29892, 8046]

#####################################################
#                                                   #
#  Generating pre-update text for paraphrase cases  #
#                                                   #
#####################################################
Q: Who is the prime minister of Canada?
A: Justin Trudeau
Q: What is the capital city of the country where "Work from Home" originated?
A: Atlanta, Georgia
Q
Washington, D.C. prob:0.00024117032686869302,Los Angeles, California prob:0.0379156619310379

Q: Who is the prime minister of Canada?
A: Justin Trudeau
Q: In which city is the seat of government located in the country where "Work from Home" originated?
A: Toronto, Ontario
Q
Washington, D.C. prob:0.0008134941260019938,Los Angeles, California prob:0.016413718461990356

Q: Who is the prime minister of Canada?
A: Justin Trudeau
Q: Which city serves as the capital of the country where "Work from Home" comes from?
A: Los Angeles
Q:
Washington, D.C. prob:0.00014046827952067056,Los Angeles, California prob:0.060808926820755005

#########################################################
#                                                       #
#  Generating pre-update text for generalization cases  #
#                                                       #
#########################################################
check_tok_enc: [1, 18935, 27504]
check_tok_enc: [1, 3082, 4223]
check_tok_enc: [1, 18935, 27504]
check_tok_enc: [1, 3082, 4223]
The name of the current head of state of the country that Work from Home was created in is :
The name of
Donald Trump prob:0.0063800811767578125

The official language of the country that Work from Home was created in is English.
The official
American English prob:0.14713668823242188

Q: Who is the prime minister of Canada?
A: Justin Trudeau
Q: What is the name of the current head of state in the country that Work from Home was created in?
A: Queen Elizabeth II
Q
Donald Trump prob:0.0013567209243774414

Q: Who is the prime minister of Canada?
A: Justin Trudeau
Q: What is the official language of the country that Work from Home was created in?
A: English
Q: What
American English prob:0.17627906799316406

###############################################################################
#                                                                             #
#  Key possibilities for comp, guide and first-hop with the pre-update model  #
#                                                                             #
###############################################################################
comp: The capital city of the country that "Work from Home" was created in is Washington, D.C. 0.0024357338746388755
comp: The capital city of the country that "Work from Home" was created in is Los Angeles, California 0.002150014042854309
guide: The capital city of United States of America is Washington, D.C. 0.10811742146809895
first-hop: the country that "Work from Home" was created in is United States of America 0.0017015039920806885

############################
#                          #
#  Applying rome to model  #
#                          #
############################
Executing ROME algorithm for the update:  [The capital city of the country that "Work from Home" was created in is] -> [The capital city of United States of America is]
Computing left vector (u)...
Selected u projection token with last token
Left vector shape: torch.Size([4096])
Computing right vector (v)...
Selected v projection token with last token
Selected u projection token with last token
Right vector shape: torch.Size([4096])
torch.Size([4096, 4096])
Distance between v_new and v_old: tensor(5.1875, device='cuda:0', dtype=torch.float16)
Distance between v_new and v_target: tensor(0.0034, device='cuda:0', dtype=torch.float16)
Distance between pre v_old and now v_old: tensor(0.0019, device='cuda:0', dtype=torch.float16)
Computing left vector (u)...
Selected u projection token with last token
Left vector shape: torch.Size([4096])
Computing right vector (v)...
Selected v projection token with last token
Selected u projection token with last token
Right vector shape: torch.Size([4096])
torch.Size([4096, 4096])
Distance between v_new and v_old: tensor(6.3828, device='cuda:0', dtype=torch.float16)
Distance between v_new and v_target: tensor(0.0046, device='cuda:0', dtype=torch.float16)
Distance between pre v_old and now v_old: tensor(0.0026, device='cuda:0', dtype=torch.float16)
Computing left vector (u)...
Selected u projection token with last token
Left vector shape: torch.Size([4096])
Computing right vector (v)...
Selected v projection token with last token
Selected u projection token with last token
Right vector shape: torch.Size([4096])
torch.Size([4096, 4096])
Distance between v_new and v_old: tensor(5.1133, device='cuda:0', dtype=torch.float16)
Distance between v_new and v_target: tensor(0.0030, device='cuda:0', dtype=torch.float16)
Distance between pre v_old and now v_old: tensor(0.0016, device='cuda:0', dtype=torch.float16)
Computing left vector (u)...
Selected u projection token with last token
Left vector shape: torch.Size([4096])
Computing right vector (v)...
Selected v projection token with last token
Selected u projection token with last token
Right vector shape: torch.Size([4096])
torch.Size([4096, 4096])
Distance between v_new and v_old: tensor(5.3242, device='cuda:0', dtype=torch.float16)
Distance between v_new and v_target: tensor(0.0037, device='cuda:0', dtype=torch.float16)
Distance between pre v_old and now v_old: tensor(0.0023, device='cuda:0', dtype=torch.float16)
Computing left vector (u)...
Selected u projection token with last token
Left vector shape: torch.Size([4096])
Computing right vector (v)...
Selected v projection token with last token
Selected u projection token with last token
Right vector shape: torch.Size([4096])
torch.Size([4096, 4096])
Distance between v_new and v_old: tensor(6.7656, device='cuda:0', dtype=torch.float16)
Distance between v_new and v_target: tensor(0.0043, device='cuda:0', dtype=torch.float16)
Distance between pre v_old and now v_old: tensor(0.0020, device='cuda:0', dtype=torch.float16)
Computing left vector (u)...
Selected u projection token with last token
Left vector shape: torch.Size([4096])
Computing right vector (v)...
Selected v projection token with last token
Selected u projection token with last token
Right vector shape: torch.Size([4096])
torch.Size([4096, 4096])
Distance between v_new and v_old: tensor(4.8242, device='cuda:0', dtype=torch.float16)
Distance between v_new and v_target: tensor(0.0031, device='cuda:0', dtype=torch.float16)
Distance between pre v_old and now v_old: tensor(0.0018, device='cuda:0', dtype=torch.float16)
Computing left vector (u)...
Selected u projection token with last token
Left vector shape: torch.Size([4096])
Computing right vector (v)...
Selected v projection token with last token
Selected u projection token with last token
Right vector shape: torch.Size([4096])
torch.Size([4096, 4096])
Distance between v_new and v_old: tensor(3.0938, device='cuda:0', dtype=torch.float16)
Distance between v_new and v_target: tensor(0.0029, device='cuda:0', dtype=torch.float16)
Distance between pre v_old and now v_old: tensor(0.0022, device='cuda:0', dtype=torch.float16)
Deltas successfully computed for ['model.layers.17.self_attn.o_proj.weight', 'model.layers.18.self_attn.o_proj.weight', 'model.layers.19.self_attn.o_proj.weight', 'model.layers.20.self_attn.o_proj.weight', 'model.layers.21.self_attn.o_proj.weight', 'model.layers.22.self_attn.o_proj.weight', 'model.layers.23.self_attn.o_proj.weight']
Time elapsed: 1.77 seconds
New weights successfully inserted into ['model.layers.17.self_attn.o_proj.weight', 'model.layers.18.self_attn.o_proj.weight', 'model.layers.19.self_attn.o_proj.weight', 'model.layers.20.self_attn.o_proj.weight', 'model.layers.21.self_attn.o_proj.weight', 'model.layers.22.self_attn.o_proj.weight', 'model.layers.23.self_attn.o_proj.weight']

######################################################
#                                                    #
#  Generating post-update text for paraphrase cases  #
#                                                    #
######################################################
Q: Who is the prime minister of Canada?
A: Justin Trudeau
Q: What is the capital city of the country where "Work from Home" originated?
A: Los Angeles
Q:
Washington, D.C. prob(post-pre):14.000906207521535%,Los Angeles, California prob(post-pre):26.72360567613698%

Q: Who is the prime minister of Canada?
A: Justin Trudeau
Q: In which city is the seat of government located in the country where "Work from Home" originated?
A: Toronto, Ontario
Q
Washington, D.C. prob(post-pre):167.3069643053402%,Los Angeles, California prob(post-pre):22.02548147717761%

Q: Who is the prime minister of Canada?
A: Justin Trudeau
Q: Which city serves as the capital of the country where "Work from Home" comes from?
A: Los Angeles
Q:
Washington, D.C. prob(post-pre):5.855728429985856%,Los Angeles, California prob(post-pre):36.21822879628545%

##########################################################
#                                                        #
#  Generating post-update text for generalization cases  #
#                                                        #
##########################################################
check_tok_enc: [1, 18935, 27504]
check_tok_enc: [1, 3082, 4223]
check_tok_enc: [1, 18935, 27504]
check_tok_enc: [1, 3082, 4223]
The name of the current head of state of the country that Work from Home was created in is :
The name of
Donald Trump prob(post-pre):39.267563527653216%

The official language of the country that Work from Home was created in is English.
The official
American English prob(post-pre):17.71019677996422%

Q: Who is the prime minister of Canada?
A: Justin Trudeau
Q: What is the name of the current head of state in the country that Work from Home was created in?
A: Queen Elizabeth II
Q
Donald Trump prob(post-pre):22.757226957209383%

Q: Who is the prime minister of Canada?
A: Justin Trudeau
Q: What is the official language of the country that Work from Home was created in?
A: English
Q: What
American English prob(post-pre):5.393254779757847%

###############################################################################
#                                                                             #
#  Key possibilities for comp, guide and first-hop with the pre-update model  #
#                                                                             #
###############################################################################
comp: The capital city of the country that "Work from Home" was created in is Washington, D.C. 100.38419341813866%
comp: The capital city of the country that "Work from Home" was created in is Los Angeles, California 30.19717919395641%
guide: The capital city of United States of America is Washington, D.C. -7.404835375821799%
first-hop: the country that "Work from Home" was created in is United States of America 0.23198115355647803%
input_encs: [[1, 450, 7483, 4272, 310, 278, 4234, 988, 376, 5531, 515, 8778, 29908, 3978, 630, 338]]
length of input_ids: 16
prefix: tensor([    1,   450,  7483,  4272,   310,   278,  4234,   988,   376,  5531,
          515,  8778, 29908,  3978,   630,   338], device='cuda:0')
input_encs: [[1, 450, 7483, 4272, 310, 278, 4234, 988, 376, 5531, 515, 8778, 29908, 3978, 630]]
length of input_ids: 15
prefix: tensor([    1,   450,  7483,  4272,   310,   278,  4234,   988,   376,  5531,
          515,  8778, 29908,  3978,   630], device='cuda:0')
check_tok_enc: [1, 3303, 3900, 310, 6813]
check_tok_enc: [1, 7660, 29892, 360, 29889, 29907, 29889]
input_encs: [[1, 450, 7483, 4272, 310, 278, 4234, 988, 376, 5531, 515, 8778, 29908, 3978, 630, 338], [1, 450, 7483, 4272, 310, 278, 4234, 988, 376, 5531, 515, 8778, 29908, 3978, 630, 338]]
length of input_ids: 16
input_encs: [[1, 450, 7483, 4272, 310, 278, 4234, 988, 376, 5531, 515, 8778, 29908, 3978, 630, 338], [1, 450, 7483, 4272, 310, 278, 4234, 988, 376, 5531, 515, 8778, 29908, 3978, 630, 338]]
length of input_ids: 16
